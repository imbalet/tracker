stages:
  - test
  - deploy

variables:
  APP_NAME: "tracker_bot"
  DOCKER_HOST: "unix:///var/run/docker.sock"
  DOCKER_TLS_CERTDIR: ""

  DB_NAME: "tracker"
  DB_USER: "user"
  DB_PASS: "$SECURE_DB_PASSWORD"
  LOG_LEVEL: "INFO"
  DB_PORT: "5432"
  BOT_TOKEN: "$TELEGRAM_BOT_TOKEN"


test:
  stage: test
  image: docker:28.3.2
  variables:
    TEST_DB_NAME: "test_db"
    TEST_DB_USER: "test_db_user"
    TEST_DB_PASS: "test_db_password"
    TEST_DB_PORT: "5432"

  script:
    - docker compose -f docker-compose.test.yml down -v --remove-orphans
    - docker compose -f docker-compose.test.yml up --build --abort-on-container-exit --remove-orphans
    - docker compose -f docker-compose.test.yml down -v --remove-orphans
  tags:
    - docker
  rules:
    - when: always

deploy:
  stage: deploy
  image: docker:28.3.2
  script:
    - docker compose down --remove-orphans 
    - docker compose up --build -d --remove-orphans
  tags:
    - docker
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
    - when: manual